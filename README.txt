PARA RODAR APLICAÇÃO: npm run start / yarn start

ESSE É UM PEQUENO PROJETO FEITO PARA FAZER UPLOAD DE ARQUIVOS DE IMAGENS PNG, JPEG E ARQUIVOS DE GIF
ESSES ARQUIVOS SÃO ARMAZENADOS LOCALMENTE NA PASTA TMP\UPLOADS. 
O ARQUIVO É SALVO COM UM HASH DE 16 CARACTERES (16 CARACTERES GERADOS RANDOMICAMENTE) + O NOME DO ARQUIVO PARA NÃO HAVER CONFLITO DE ARQUIVOS DE MESMO NOME. O CAMINHO PARA CADA ARQUIVO FICA SALVO EM UM BANCO DE DADOS NÃO RELACIONAL (NOSQL) CONHECIDO COMO MONGODB.
ESSA API TEM APENAS 3 ROTAS, UMA DE POST PARA SUBIR OS ARQUIVOS, UMA DE DELETE PARA DELETAR E UMA DE GET PARA PUXAR OS ARQUIVOS:

POST
 A ROTA POST SERVE PARA SUBIR OS ARQUIVOS PARA O DIR TMP\UPLOADS, PRECISAMOS PASSAR PARA ESTE MÉTODO APENAS O ARQUIVO QUE DESEJAMOS SUBIR (PARA TESTES, UTILIZADO O INSOMNIA, POIS ELE TEM UMA FERRAMENTA PARA REALIZAR ESSE TIPO DE UPLOAD), O MÉTODO POST AGE EM CONJUNTO COM DOIS RECURSOS, O "MULTER.JS" DENTRO DA PASTA CONFIG QUE SÃO AS CONFIGURAÇÕES DE ONDE SERÁ FEITO O UPLOAD DA IMAGEM, O QUE O SISTEMA VAI FAZER QUANDO ESTIVER PRA SUBIR (COMO O HASH DE 16 CARACTERES) E O TIPO DE ARQUIVOS QUE ELE SUPORTA SUBIR. O OUTRO RECURSO É O "POST.JS" DA PASTA MODELS, QUE É RESPONSÁVEL PELA ESTRUTURA DO BANCO DE DADOS E DE DUAS PRÉ AÇÕES (AÇÕES QUE SÃO REALIZADAS ANTES DA FINALIZAÇÃO DE UMA REQUEST, ENTREGANDO UMA PROMESSA PROMISIFY): UMA DISPARADA AO TENTAR SALVAR ARQUIVOS ELE ALIMENTA UMA VARIÁVEL "URL" COM O CAMINHO PARA VISUALIZAÇÃO DA IMAGEM AO CLICAR E OUTRA PRÉ AÇÃO PARA EVENTO DE DELETAR OS ARQUIVOS, PORÉM DETALHAREI MELHOR NA ROTA DE DELETE.
POR FIM A ROTA POST DEVOLVE O SEGUINTE JSON {
  "_ID": "ID GERADO PARA A IMAGEM",
  "NAME": "NOME DO ARQUIVO",
  "SIZE": TAMANHO DA IMAGEM (EM KB),
  "KEY": "A KEY É O RESULTADO DA CONCATENAÇÃO DO HASH DE 16 CARACTERES + NOME DO ARQUIVO",
  "URL": "RETORNA UMA URL CLICÁVEL PARA VISUALIZAR ",
  "CREATEDAT": "RETORNA DATA E HORA DO UPLOAD DO ARQUIVO",
  "__V": 0
}


GET
A ROTA GET TRAZ TODAS AS IMAGENS ATUALMENTE SALVAS NO BANCO DE DADOS E RETORNA AS SEGUINTES INFORMAÇÕES:
{
  "_ID": "ID GERADO PARA A IMAGEM",
  "NAME": "NOME DO ARQUIVO",
  "SIZE": TAMANHO DA IMAGEM (EM KB),
  "KEY": "A KEY É O RESULTADO DA CONCATENAÇÃO DO HASH DE 16 CARACTERES + NOME DO ARQUIVO",
  "URL": "RETORNA UMA URL CLICAVEL PARA VISUALIZAR ",
  "CREATEDAT": "RETORNA DATA E HORA DO UPLOAD DO ARQUIVO",
  "__V": 0
}


DELETE
A ROTA “DELETE” DELETA UMA IMAGEM ATUALMENTE SALVA NO BANCO DE DADOS E EXCLUI O ARQUIVO DO DIRETÓRIO TMP\UPLOADS, PARA UTILIZAR ESSE “DELETE” PASSE HTTP://LOCALHOST:3000/POSTS/"ID DA IMAGEM A SER DELETADA", ELE DISPARARA UMA PROCURA NO BANCO DE DADOS PELO ID PASSADO NA URL E DISPARARÁ A FUNÇÃO PRE ESTABELECIDA DENTRO DE "POST.JS" EM "MODELS" A FUNÇÃO “REMOVE”, ONDE ELA PROCURA A IMAGEM NO DIRETÓRIO ONDE É SALVA E DELETA TANTO A IMAGEM DELE QUANTO DO BANCO DE DADOS.
POR FIM RETORNA UMA MENSAGEM DE "POST REMOVED".

LEMBRANDO QUE PARA UTILIZAR ESSA APLICAÇÃO, PRECISA CONFIGURAR O LOCAL DO SEU BANCO DE DADOS MONGODB. DENTRO DO ARQUIVO "INDEX.JS" VÁ NA FUNÇÃO “MOONGOSE.CONNECT” E ALTERE O "MONGODB://LOCALHOST:27017/UPLOAD" COLOCANDO NO LUGAR DA PORTA "27017", QUAL PORTA ESTÁ CONFIGURADO O SEU BANCO DE DADOS MONGODB.
SE QUISER USAR UMA PORTA DIFERENTE DA 3000 CONFIGURADA INICIALMENTE NA APLICAÇÃO, PRECISA TROCAR A PORTA DENTRO DO "INDEX.JS" O "APP.LISTEN(3000)" PARA A DESEJADA E TAMBÉM NO ARQUIVO ".ENV" TROCAR "http://localhost:3000" para "http://localhost:Porta que deseja usar" (LEMBRANDO QUE SE FIZER ESSA ALTERAÇÃO COM A APLICAÇÃO RODANDO, PRECISA REINICIA-LA PORQUE VARIÁVEIS GLOBAIS A APLICAÇÃO SÓ ENXERGA ALTERAÇÕES DEPOIS DE ENCERRA-LA).